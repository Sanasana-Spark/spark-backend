"""add created to org & user model

Revision ID: aac657822c5b
Revises: fdf2ce7cf0ba
Create Date: 2025-05-26 22:58:20.748028

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import DateTime, func
from sqlalchemy.sql import table, column


# revision identifiers, used by Alembic.
revision = 'aac657822c5b'
down_revision = 'fdf2ce7cf0ba'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('organization', schema='users') as batch_op:
        batch_op.add_column(sa.Column('org_created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('org_created_by', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('org_status', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('org_logo', sa.String(length=200), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['org_created_by'], ['id'], referent_schema='users')
    
    # Step 2: Fill existing rows with `now()`
    op.execute(
        "UPDATE users.organization SET org_created_at = NOW()"
    )

    # Step 3: Alter the column to be non-nullable
    with op.batch_alter_table('organization', schema='users') as batch_op:
        batch_op.alter_column('org_created_at', nullable=False)

    with op.batch_alter_table('users', schema='users') as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('image', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('last_login', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_superuser', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_deleted', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_organization_admin', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_organization_owner', sa.Boolean(), nullable=True))

     # Step 2: Fill existing rows with `now()`


    op.execute(
        "UPDATE users.users SET created_at = NOW()"
    )

    # Step 3: Alter the column to be non-nullable
    with op.batch_alter_table('users', schema='users') as batch_op:
        batch_op.alter_column('created_at', nullable=False)
 


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema='users') as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('is_organization_owner')
        batch_op.drop_column('is_organization_admin')
        batch_op.drop_column('is_deleted')
        batch_op.drop_column('is_verified')
        batch_op.drop_column('is_superuser')
        batch_op.drop_column('is_active')
        batch_op.drop_column('last_login')
        batch_op.drop_column('image')
        batch_op.drop_column('created_by')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('organization', schema='users') as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('org_logo')
        batch_op.drop_column('org_status')
        batch_op.drop_column('org_created_by')
        batch_op.drop_column('org_created_at')

    # ### end Alembic commands ###
